$color-primary: #fa2828;
$color-black: #242428;
$color-gray: #62676c;
$color-white: #fff;

$color-background: (
  bg-01: #f5f6f9,
  bg-02: #f8f9fa,
  bg-03: #ecedf2,
  bg-04: #e4e6e8
);

$color-line: (
  line-01: #ecedf2,
  line-02: #cfd0d7,
  line-03: #dfe0e5,
  line-04: #dcdde1
);

$color-type: (
  black-01: #000000,
  black-02: #151516,
  gray-01: #878d95,
  gray-02: #a7acb6,
  gray-03: #e8eaf1,
  gray-04: #ccc,
  red-01: #c82020,
  red-02: #dd6045,
  blue-01: #1a81bb,
  blue-02: #3d85b9,
  purple-01: #981ce4,
  clean-01: #1aa8bb,
  waiting-01: #f56c36
);

$z-index: (
  sticky: 10, // sticky area
  nav: 50, // lnb, dropdown, btn_move_top
  nav-fixed: 300, // product detail
  popup: 500, // popup
  modal: 1000 // modal
);

$container-width: 1920px;
$content-width: 1120px;

@mixin multi-ellipsis($line) {
  display: block;
  display: -webkit-box;
  overflow: hidden;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
}

@mixin ellipsis($width: 100%) {
  display: block;
  max-width: $width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin blind {
  overflow: hidden;
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  clip: rect(0, 0, 0, 0);
}

@mixin font-family($font-family) {
  font-family: $font-family, -apple-system, BlinkMacSystemFont, Apple SD Gothic Neo, 'Malgun Gothic', Arial, sans-serif;
}

@mixin img-border {
  &::before {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 1px solid $color-black;
    border-radius: 10px;
    box-sizing: border-box;
    opacity: 0.1;
    z-index: 1;
    content: '';
  }
}

// color change filter
// base color: #242428
@mixin color-filter($color: #fff) {
  @if($color == #fff) {
    filter: brightness(0) invert(1);
  } @else if($color == #ecedf2){
    filter: hue-rotate(350deg) brightness(655%) grayscale(75%);
  } @else if($color == #cfd0d7){
    filter: hue-rotate(353deg) brightness(575%) grayscale(70%);
  }  @else if($color == #a7acb6){
    filter: hue-rotate(340deg) brightness(472%) grayscale(35%);
  }
}

// ScrollBar
@mixin scrollbar($width: 3px) {
  overflow-y: auto;
  overflow-y: overlay;
  // firefox
  scrollbar-width: thin;
  scrollbar-color: rgba(36, 36, 40, 0.4) transparent;
  // chrome, safari
  &::-webkit-scrollbar {
    -webkit-appearance: none;
    width: $width*5;
  }
  &::-webkit-scrollbar-track {
    background-color: transparent;
  }
  &::-webkit-scrollbar-thumb {
    border: $width*2 solid transparent;
    border-radius: 100px;
    background-color: rgba(36, 36, 40, 0.4);
    background-clip: padding-box;
  }
}

@mixin absolute-full {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0
}

@mixin hover-focus {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin clearfix($pseudo: after) {
  @if($pseudo == after) {
    &::after {
      display: block;
      clear: both;
      content: '';
    }
  } @else if($pseudo == before){
    &::before {
      display: block;
      clear: both;
      content: '';
    }
  }
}

// opacity
@mixin dimmed($opacity) {
  &:after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba(0, 0, 0, $opacity);
    content: '';
  }
}

// 말줄임
@mixin keepkword() {
  word-break: keep-all;
  word-wrap: break-word;
}

// icon
$sqrt_2: 1.41421356237;
@mixin iconAngle($direction: "up", $width: 50px, $height: 25px, $thick: 2px, $color: #222, $display: inline-block, $position: relative) {
  position: $position;
  display: $display;
  width: $width;
  height: $height;
  @if ($direction == "up" or $direction == "down") {
    $size: floor($width/$sqrt_2 - 2 * $thick);
    $rate: 2 * $height/$width;
    $margin-top: round($rate * $size/(2 * $sqrt_2));
    &:before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: $size;
      height: $size;
      @if ($rate == 1) {
        -webkit-transform: translate(-50%, -50%) rotate(45deg);
        transform: translate(-50%, -50%) rotate(45deg);
      } @else {
        -webkit-transform: translate(-50%, -50%) scale(1, $rate) rotate(45deg);
        transform: translate(-50%, -50%) scale(1, $rate) rotate(45deg);
      }
      @if ($direction == "up") {
        margin-top: $margin-top;
        border-top: $thick solid $color;
        border-left: $thick solid $color;
      } @else if ($direction == "down") {
        margin-top: -$margin-top;
        border-right: $thick solid $color;
        border-bottom: $thick solid $color;
      }
    }
  } @else if ($direction == "left" or $direction == "right") {
    $size: floor($height/$sqrt_2 - 2 * $thick);
    $rate: 2 * $width/$height;
    $margin-left: round($rate * $size/(2 * $sqrt_2));
    &:before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: $size;
      height: $size;
      @if ($rate == 1) {
        -webkit-transform: translate(-50%, -50%) rotate(45deg);
        transform: translate(-50%, -50%) rotate(45deg);
      } @else {
        -webkit-transform: translate(-50%, -50%) scale($rate, 1) rotate(45deg);
        transform: translate(-50%, -50%) scale($rate, 1) rotate(45deg);
      }
      @if ($direction == "left") {
        margin-left: $margin-left;
        border-left: $thick solid $color;
        border-bottom: $thick solid $color;
      } @else if ($direction == "right") {
        margin-left: -$margin-left;
        border-top: $thick solid $color;
        border-right: $thick solid $color;
      }
    }
  }
}
@mixin iconArrow($direction: "up", $width: 50px, $height: 50px, $thick: 2px, $color: #222, $display: inline-block, $position: relative) {
  position: $position;
  display: $display;
  width: $width;
  height: $height;
  &:before {
    content: '';
    position: absolute;
    border-top: $thick solid $color;
    border-left: $thick solid $color;
    @if ($direction == "up" or $direction == "down") {
      $size: round($width/$sqrt_2 - $thick);
      left: 50%;
      width: $size;
      height: $size;
      @if ($direction == "up") {
        top: round($width/2);
        -webkit-transform: translate(-50%, -50%) rotate(45deg);
        transform: translate(-50%, -50%) rotate(45deg);
      } @else if ($direction == "down") {
        bottom: round($width/2);
        -webkit-transform: translate(-50%, 50%) rotate(-135deg);
        transform: translate(-50%, 50%) rotate(-135deg);
      }
    } @else if ($direction == "left" or $direction == "right") {
      $size: round($height/$sqrt_2 - $thick);
      top: 50%;
      width: $size;
      height: $size;
      @if ($direction == "left") {
        left: round($height/2);
        -webkit-transform: translate(-50%, -50%) rotate(-45deg);
        transform: translate(-50%, -50%) rotate(-45deg);
      } @else if ($direction == "right") {
        right: round($height/2);
        -webkit-transform: translate(50%, -50%) rotate(135deg);
        transform: translate(50%, -50%) rotate(135deg);
      }
    }
  }
  &:after {
    content: '';
    position: absolute;
    background-color: $color;
    @if ($direction == "up" or $direction == "down") {
      @if ($direction == "up") {
        top: round($thick/$sqrt_2);
      } @else if ($direction == "down") {
        bottom: round($thick/$sqrt_2);
      }
      left: 50%;
      width: $thick;
      height: $height - round($thick/$sqrt_2);
      -webkit-transform: translate(-50%, 0);
      transform: translate(-50%, 0);
    } @else if ($direction == "left" or $direction == "right") {
      top: 50%;
      @if ($direction == "left") {
        left: round($thick/$sqrt_2);
      } @else if ($direction == "right") {
        right: round($thick/$sqrt_2);
      }
      width: $width - round($thick/$sqrt_2);
      height: $thick;
      -webkit-transform: translate(0, -50%);
      transform: translate(0, -50%);
    }
  }
}
@mixin iconTriangle($direction: "up", $width: 20px, $height: 10px, $color: #000, $display: inline-block) {
  display: $display;
  width: $width;
  height: $height;
  &:before {
    content: '';
    display: block;
    @if ($direction == "up") {
      border-bottom: $height solid $color;
      border-left: round($width/2) solid transparent;
      border-right: round($width/2) solid transparent;
    } @else if ($direction == "down") {
      border-top: $height solid $color;
      border-left: round($width/2) solid transparent;
      border-right: round($width/2) solid transparent;
    } @else if ($direction == "left") {
      border-top: round($height/2) solid transparent;
      border-bottom: round($height/2) solid transparent;
      border-right: $width solid $color;
    } @else if ($direction == "right") {
      border-top: round($height/2) solid transparent;
      border-bottom: round($height/2) solid transparent;
      border-left: $width solid $color;
    }
  }
}
@mixin iconCancel($size: 21px, $thick: 2px, $color: #000, $padding: 0, $display: inline-block, $position: relative) {
  position: $position;
  display: $display;
  width: $size + $padding * 2;
  height: $size + $padding * 2;
  &:before,
  &:after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: round($size * $sqrt_2 - $thick);
    height: $thick;
    background-color: $color;
  }
  &:before {
    -webkit-transform: translate(-50%, -50%) rotate(45deg);
    transform: translate(-50%, -50%) rotate(45deg);
  }
  &:after {
    -webkit-transform: translate(-50%, -50%) rotate(135deg);
    transform: translate(-50%, -50%) rotate(135deg);
  }
}

// skeleton image
$skeleton-colors: #dae5eb, #dad9eb, #e2d9ea, #ebd9e9, #c9e5d9, #c5cde2, #d9d9d9, #eeeade;

@mixin skeleton-image {
  img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

@mixin skeleton-image-container($ratio: 100%) {
  display: block;
  position: relative;
  padding-bottom: $ratio;
}

@mixin skeleton-image-background($color: nth($skeleton-colors, 1)) {
  background-color: $color;
}

@mixin skeleton-image-wrap($ratio: 100%) {
  @include skeleton-image-container($ratio);
  @include skeleton-image-background();
  @include skeleton-image();
}

@mixin skeleton-image-wraps($iterated-element, $element, $ratio: 100%) {
  #{$iterated-element $element} {
    @include skeleton-image-container($ratio);
    @include skeleton-image();
  }
  @for $i from 1 through length($skeleton-colors) {
    $c: nth($skeleton-colors, $i);
    #{$iterated-element}:nth-child(#{$i}n + 0) #{$element} {
      @include skeleton-image-background($c);
    }
  }
}

// Safe Area
// @include safeArea(true, padding, 10px 5px right left);
// @include safeArea(false, padding, 5px bottom);
//   $all: true / false(multi / single)
//   $attr: selector
//   $val...: value direction (**direction: right bottom left)
@mixin safeArea($all: false, $attr: padding, $val...) {
  @if(($attr == padding or $attr == margin) and $all == false) {
      #{$attr}-#{separateVal($val, false)}: separateVal($val, true);
      #{$attr}-#{separateVal($val, false)}: safeAresLoop($all, 'env', $attr, $val);
      #{$attr}-#{separateVal($val, false)}: safeAresLoop($all, 'constant', $attr, $val);
  } @else {
      #{$attr}: separateVal($val, true);
      #{$attr}: safeAresLoop($all, 'env', $attr, $val);
      #{$attr}: safeAresLoop($all, 'constant', $attr, $val);
  }
}

.popup_calendar_datepicker, 
.react-datepicker-popper {
  overflow: hidden;
  position: absolute !important;
  top: calc(100% + 6px) !important;
  left: 50% !important;
  border-radius: 12px;
  background: $color-white;
  transform: translateX(-50%) !important;
  z-index: map-get($z-index, popup);
  &::before {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 1px solid $color-black;
    border-radius: 12px;
    box-sizing: border-box;
    z-index: -1;
    content: '';
  }
}

.calendar_select_year {
  .popup_calendar_datepicker & {
    margin: 20px 1px;
    padding: 0 19px;
    width: 86px;
    max-height: 252px;
    @include scrollbar;
  }
  .calendar_select_item {
    .calendar_btn {
      width: 100%;
      height: 42px;
      border: 1px solid $color-white;
      border-radius: 6px;
      background: $color-white;
      @include font-family('Roboto');
      font-size: 14px;
      color: $color-black;
      &:hover,
      &:focus {
        border-color: $color-black;
      }
      &:disabled {
        color: map-get($color-type, gray-02);
        &:hover,
        &:focus {
          border-color: $color-white;
        }
      }
      &[aria-selected="true"] {
        border: 1px solid $color-black;
        border-radius: 6px;
        font-weight: 500;
      }
    }
  }
}

// react-datepicker library custom
.react-datepicker {
  display: block;
  border: 0;
  border-radius: 0;
  text-align: center;
  @include font-family('Notosans');
  .react-datepicker-popper & {
    margin: 20px 1px;
    padding: 0 19px;
    .calendar_custom_header {
      .calendar_nav {
        margin: 0 -4px;
      }
    }
  }
}
.react-datepicker-popper[data-placement^=bottom] {
  padding-top: 0;
}
.react-datepicker__month-container {
  float: none;
}
.react-datepicker__header {
  padding: 0;
  border: 0;
  border-radius: 0;
  background: $color-white;
  .calendar_custom_header {
    position: relative;
    padding-bottom: 10px;
    text-align: center;
    .calendar_nav {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin: 0 5px;
    }
    .calendar_title {
      position: absolute;
      top: 0;
      left: 50%;
      @include font-family('Roboto');
      font-size: 18px;
      font-weight: 500;
      line-height: 24px;
      text-align: center;
      color: $color-black;
      transform: translateX(-50%);
    }
    .calendar_nav_btn {
      width: 24px;
      height: 24px;
      font-size: 0;
      line-height: 0;
    }
  }
}
.react-datepicker__day-names, 
.react-datepicker__week {
  display: flex; 
  justify-content: space-between;
}
.react-datepicker__day-names {
  margin: 12px 0 7px;
}
.react-datepicker__day-name {
  margin: 0;
  width: 34px;
  font-size: 12px;
  line-height: 16px;
  color: $color-black;
  &:first-child {
    color: map-get($color-type, red-02);
  }
  &:last-child {
    color: map-get($color-type, blue-02);
  }
}
.react-datepicker__month {
  margin: 0;
  width: 262px;
  &.react-datepicker__monthPicker {
    width: 270px;
  }
}
.react-datepicker__week {
  // [개발요청] 주간달력 Mouse Over Event에서 추가하는 class
  .week-group-hover {
    border-color: $color-black;
  }
}
.react-datepicker__day {
  margin: 0;
  width: 34px;
  height: 34px;
  border: 1px solid $color-white;
  border-radius: 50%;
  background: $color-white;
  @include font-family('Roboto');
  font-size: 14px;
  font-weight: 500;
  line-height: 32px;
  color: $color-black;
  box-sizing: border-box;
  &:hover,
  &.react-datepicker__day--keyboard-selected {
    border-color: $color-black;
    border-radius: 50%;
    background: $color-white;
  }
  &:first-child {
    color: map-get($color-type, red-02);
  }
  &:last-child {
    color: map-get($color-type, blue-02);
  }
  &.react-datepicker__day--today {
    font-weight: 500;
  }
  &.react-datepicker__day--selected,
  &.react-datepicker__day--in-range {
    border-color: $color-black;
    background: $color-black;
    color: white;
  }
  &.react-datepicker__day--disabled {
    color: map-get($color-type, gray-02);
    &:hover,
    &.react-datepicker__day--keyboard-selected {
      border-color: $color-white;
    }
  }
}
.react-datepicker__month-wrapper {
  display: flex;
  justify-content: space-between;
  margin-top: 12px;
  & + & {
    margin-top: 6px;
  }
}
.react-datepicker__month {
  .react-datepicker__month-text {
    margin: 0;
    width: 86px;
    height: 42px;
    border: 1px solid $color-white;
    border-radius: 6px;
    background: $color-white;
    font-size: 14px;
    line-height: 40px;
    color: $color-black;
    box-sizing: border-box;
    &:hover,
    &.react-datepicker__month-text--keyboard-selected {
      border-color: $color-black;
    }
    &.react-datepicker__month-text--today {
      font-weight: 400;
    }
    &.react-datepicker__month--selected {
      border-color: $color-black;
      background: $color-white;
      font-weight: 500;
    }
    &.react-datepicker__month--disabled {
      color: map-get($color-type, gray-02);
      &:hover,
      &.react-datepicker__day--keyboard-selected {
        border-color: $color-white;
      }
    }
  }
}